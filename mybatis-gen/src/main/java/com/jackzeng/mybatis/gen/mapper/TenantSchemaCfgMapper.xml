<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jackzeng.mybatis.gen.dao.TenantSchemaCfgMapper">
  <resultMap id="BaseResultMap" type="com.jackzeng.mybatis.gen.entity.TenantSchemaCfg">
    <id column="tenant_id" jdbcType="VARCHAR" property="tenant_id" />
    <result column="tenant_schema" jdbcType="VARCHAR" property="tenant_schema" />
    <result column="db_type" jdbcType="VARCHAR" property="db_type" />
    <result column="created_date" jdbcType="TIMESTAMP" property="created_date" />
    <result column="created_by" jdbcType="VARCHAR" property="created_by" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    tenant_id, tenant_schema, db_type, created_date, created_by, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tenant_schema_cfg
    where tenant_id = #{tenant_id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tenant_schema_cfg
    where tenant_id = #{tenant_id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jackzeng.mybatis.gen.entity.TenantSchemaCfg">
    insert into tenant_schema_cfg (tenant_id, tenant_schema, db_type, 
      created_date, created_by, description
      )
    values (#{tenant_id,jdbcType=VARCHAR}, #{tenant_schema,jdbcType=VARCHAR}, #{db_type,jdbcType=VARCHAR}, 
      #{created_date,jdbcType=TIMESTAMP}, #{created_by,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jackzeng.mybatis.gen.entity.TenantSchemaCfg">
    insert into tenant_schema_cfg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenant_id != null">
        tenant_id,
      </if>
      <if test="tenant_schema != null">
        tenant_schema,
      </if>
      <if test="db_type != null">
        db_type,
      </if>
      <if test="created_date != null">
        created_date,
      </if>
      <if test="created_by != null">
        created_by,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenant_id != null">
        #{tenant_id,jdbcType=VARCHAR},
      </if>
      <if test="tenant_schema != null">
        #{tenant_schema,jdbcType=VARCHAR},
      </if>
      <if test="db_type != null">
        #{db_type,jdbcType=VARCHAR},
      </if>
      <if test="created_date != null">
        #{created_date,jdbcType=TIMESTAMP},
      </if>
      <if test="created_by != null">
        #{created_by,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jackzeng.mybatis.gen.entity.TenantSchemaCfg">
    update tenant_schema_cfg
    <set>
      <if test="tenant_schema != null">
        tenant_schema = #{tenant_schema,jdbcType=VARCHAR},
      </if>
      <if test="db_type != null">
        db_type = #{db_type,jdbcType=VARCHAR},
      </if>
      <if test="created_date != null">
        created_date = #{created_date,jdbcType=TIMESTAMP},
      </if>
      <if test="created_by != null">
        created_by = #{created_by,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where tenant_id = #{tenant_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jackzeng.mybatis.gen.entity.TenantSchemaCfg">
    update tenant_schema_cfg
    set tenant_schema = #{tenant_schema,jdbcType=VARCHAR},
      db_type = #{db_type,jdbcType=VARCHAR},
      created_date = #{created_date,jdbcType=TIMESTAMP},
      created_by = #{created_by,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where tenant_id = #{tenant_id,jdbcType=VARCHAR}
  </update>
</mapper>